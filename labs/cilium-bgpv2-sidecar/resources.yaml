# BGP Configuration
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPClusterConfig
metadata:
  name: sidecar-control-plane
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: cilium-bgpv2-sidecar-control-plane
  bgpInstances:
  - name: sidecar
    localASN: 65001
    peers:
    - name: local-daemon
      peerAddress: 127.0.0.1
      peerConfigRef:
        name: local-daemon
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPClusterConfig
metadata:
  name: sidecar-worker
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: cilium-bgpv2-sidecar-worker
  bgpInstances:
  - name: sidecar
    localASN: 65002
    peers:
    - name: local-daemon
      peerAddress: 127.0.0.1
      peerConfigRef:
        name: local-daemon
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPPeerConfig
metadata:
  name: local-daemon
spec:
  timers:
    connectRetryTimeSeconds: 1
  families:
  - afi: ipv4
    safi: unicast
    advertisements:
      matchLabels:
        enabled: "true"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPAdvertisement
metadata:
  name: default
  labels:
    enabled: "true"
spec:
  # Mark routes with special large communities. This helps local FRR or
  # upstream routers to classify k8s routes without knowing the actual prefixes
  # (which is hard to keep up with due to the dynamic nature of the k8s).
  advertisements:
  - advertisementType: PodCIDR
    attributes:
      communities:
        large: ["8:1:0"]
  - advertisementType: Service
    attributes:
      communities:
        large: ["8:2:0"]
    service:
      addresses:
      - LoadBalancerIP
    selector:
      matchExpressions:
      - {key: somekey, operator: NotIn, values: ['never-used-value']}

# Example Service
---
apiVersion: cilium.io/v2alpha1
kind: CiliumLoadBalancerIPPool
metadata:
  name: default
spec:
  blocks:
  - cidr: "10.0.123.0/24"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
spec:
  selector:
    matchLabels:
      app: httpbin
  replicas: 1
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - image: mccutchen/go-httpbin
        name: httpbin
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: httpbin
